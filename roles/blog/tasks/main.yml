---
- name: Create web directory
  file: path={{ blog_engine.web_dir }} state=directory owner=www-data group=www-data mode=0755

- name: Create temporary build dir for our passenger docker instance
  file: path={{ blog_engine.build_dir }} state=directory

- name: Copy Dockerfile and related config files for our passenger docker instance
  template: src={{ blog_engine.template_dir }}/{{ item }} dest={{ blog_engine.build_dir }}/{{ item }}
  with_items:
    - Dockerfile
    - www.cochezconsult.be.conf
    - config.js

- name: Build Docker image for our Ghost docker instance
  command: docker build -t benc/{{ blog_engine.name }} . chdir={{ blog_engine.build_dir }}

- name: Get latest Ghost
  get_url: url=https://ghost.org/zip/ghost-latest.zip dest=/tmp/ghost.zip mode=0644

- name: Unpack
  command: unzip -uo ghost.zip -d {{ blog_engine.web_dir }} chdir=/tmp

- name: Transfer authority to vagrant # or npm won't work due to a sqlite install issue
  command: chown -R vagrant:vagrant {{ blog_engine.web_dir }}

- name: Install modules
  sudo_user: vagrant
  npm: path={{ blog_engine.web_dir }}

- name: Transfer authority to www-data
  command: chown -R www-data:www-data {{ blog_engine.web_dir }}

- name: Restart passenger
  sudo_user: www-data
  command: touch {{ blog_engine.web_dir }}/restart.txt

- name: Get current running Docker instances
  command: docker ps -a
  register: docker_processes

- name: Start blog engine
  command: docker run -name {{ blog_engine.name }} -p 80:80 -v {{ blog_engine.web_dir }}:/www:rw -d benc/{{ blog_engine.name }}
  when: not '{{ blog_engine.name }}' in docker_processes.stdout

# - name: Start blog engine
#   command: docker run -name {{ blog_engine }} -link {{ blog_datastore }}:db -p 80:80 -v {{ blog_engine.web_dir }}:/www:rw -d benc/web
#   when: not '{{ blog_engine }}' in docker_processes.stdout

