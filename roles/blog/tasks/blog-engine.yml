- name: Blog engine | Create web directory
  file: path={{ blog_engine.web_dir }} state=directory owner=www-data group=www-data mode=0755

- name: Blog engine | Create temporary build dir
  file: path={{ blog_engine.build_dir }} state=directory

- name: Blog engine | Copy Dockerfile and related config files
  template: src={{ blog_engine.template_dir }}/{{ item }} dest={{ blog_engine.build_dir }}/{{ item }}
  with_items:
    - Dockerfile
    - www.cochezconsult.be.conf

- name: Blog engine | Build Docker image
  command: docker build -q=true -t=benc/blog_engine -rm . chdir={{ blog_engine.build_dir }}

- name: Blog engine | Get latest Ghost
  get_url: url=https://ghost.org/zip/ghost-latest.zip dest=/tmp/ghost.zip mode=0644

- name: Blog engine | Unpack
  command: unzip -uo ghost.zip -d {{ blog_engine.web_dir }} chdir=/tmp

- name: Blog engine | Transfer authority to benc
  command: chown -R benc:benc {{ blog_engine.web_dir }}

- name: Blog engine | Install modules # NOTE: npm won't work as root - sqlite does not install
  sudo_user: benc
  npm: path={{ blog_engine.web_dir }} production=yes
  
- name: Blog engine | Install pg module
  sudo_user: benc
  npm: name=pg path={{ blog_engine.web_dir }} production=yes

- name: Blog engine | Transfer authority to www-data
  command: chown -R www-data:www-data {{ blog_engine.web_dir }}
  
- name: Blog engine | Copy config file
  template: src=ghost/config.js dest={{ blog_engine.web_dir }}/config.js owner=www-data group=www-data mode=0644

- name: Blog engine | Check if it is already running
  command: docker inspect blog_engine
  register: docker_inspect_blog_engine
  ignore_errors: yes
  
- name: Start blog_engine instance
  # docker: name=blog_engine links=postgres:db ports=:80 volumes={{ blog_engine.web_dir }}:/www:rw detach=true image=benc/blog_engine
  command: docker run -name blog_engine -link postgres:db -p 80:80 -v {{ blog_engine.web_dir }}:/www:rw -d benc/blog_engine
  when: "'No such image or container' in docker_inspect_blog_engine.stderr"
